# Generated by Django 3.1.5 on 2021-03-06 11:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('car_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=30)),
                ('car_number', models.CharField(max_length=8)),
                ('registration', models.CharField(max_length=15)),
                ('engine_number', models.CharField(max_length=30)),
                ('body_number', models.CharField(max_length=30)),
                ('chassis', models.CharField(max_length=30)),
                ('car_color', models.CharField(max_length=20)),
                ('mileage', models.CharField(max_length=10)),
                ('release_date', models.DateField()),
                ('car_type', models.CharField(max_length=20)),
                ('car_owner', models.CharField(max_length=60)),
                ('owner_address', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Машину',
                'verbose_name_plural': 'Машины',
            },
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('consumable_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=10, verbose_name='Ед.измер.')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Расходник',
                'verbose_name_plural': 'Расходники',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_contract', models.FileField(blank=True, null=True, upload_to='', verbose_name='Контракт в пдф')),
                ('contract_date', models.CharField(blank=True, max_length=10, null=True)),
                ('contract_number', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Контракт',
                'verbose_name_plural': 'Контракты',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('address', models.CharField(max_length=100)),
                ('passport_number', models.CharField(max_length=9, verbose_name='Паспорт')),
                ('when_passport_issued', models.DateField()),
                ('whom_passport_issued', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=20, verbose_name='Тел. номер')),
                ('gnu_or_gje', models.CharField(max_length=40)),
                ('uvajaemaya', models.CharField(max_length=40)),
                ('vid', models.CharField(max_length=100)),
                ('mesto_osmotra', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Клиента',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_rate_price', models.IntegerField(blank=True, default=0, null=True)),
                ('report_rate_price_txt', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=10, verbose_name='Ед.измер.')),
                ('nexia3', models.FloatField(blank=True, null=True, verbose_name='Нексия 3')),
                ('cobalt', models.FloatField(blank=True, null=True, verbose_name='Кобальт')),
                ('malibu', models.FloatField(blank=True, null=True, verbose_name='Малибу')),
                ('nexia_sonc', models.FloatField(blank=True, null=True, verbose_name='Нексия Sonc')),
                ('damas', models.FloatField(blank=True, null=True, verbose_name='Дамас')),
                ('tiko', models.FloatField(blank=True, null=True, verbose_name='Тико')),
                ('matiz', models.FloatField(blank=True, null=True, verbose_name='Матиз')),
                ('matiz_best', models.FloatField(blank=True, null=True, verbose_name='Матиз Бест')),
                ('spark', models.FloatField(blank=True, null=True, verbose_name='Спарк')),
                ('nexia_dons', models.FloatField(blank=True, null=True, verbose_name='Нексия Донс')),
                ('lacceti', models.FloatField(blank=True, null=True, verbose_name='Лассети')),
                ('captiva', models.FloatField(blank=True, null=True, verbose_name='Каптива')),
                ('takuma', models.FloatField(blank=True, null=True, verbose_name='Такума')),
                ('epica', models.FloatField(blank=True, null=True, verbose_name='Эпика')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Деталь',
                'verbose_name_plural': 'Детали',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('nexia3', models.FloatField(blank=True, null=True, verbose_name='Нексия 3')),
                ('cobalt', models.FloatField(blank=True, null=True, verbose_name='Кобальт')),
                ('malibu', models.FloatField(blank=True, null=True, verbose_name='Малибу')),
                ('nexia_sonc', models.FloatField(blank=True, null=True, verbose_name='Нексия Sonc')),
                ('damas', models.FloatField(blank=True, null=True, verbose_name='Дамас')),
                ('tiko', models.FloatField(blank=True, null=True, verbose_name='Тико')),
                ('matiz', models.FloatField(blank=True, null=True, verbose_name='Матиз')),
                ('matiz_best', models.FloatField(blank=True, null=True, verbose_name='Матиз Бест')),
                ('spark', models.FloatField(blank=True, null=True, verbose_name='Спарк')),
                ('nexia_dons', models.FloatField(blank=True, null=True, verbose_name='Нексия Донс')),
                ('lacceti', models.FloatField(blank=True, null=True, verbose_name='Лассети')),
                ('captiva', models.FloatField(blank=True, null=True, verbose_name='Каптива')),
                ('takuma', models.FloatField(blank=True, null=True, verbose_name='Такума')),
                ('epica', models.FloatField(blank=True, null=True, verbose_name='Эпика')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Услугу',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.CharField(max_length=10)),
                ('report_date', models.CharField(max_length=10)),
                ('created_at', models.DateField(blank=True, null=True, verbose_name='Время создания')),
                ('service_cost', models.IntegerField(default=0)),
                ('product_cost', models.IntegerField(default=0)),
                ('product_acc_cost', models.IntegerField(default=0)),
                ('consumable_cost', models.IntegerField(default=0)),
                ('key', models.CharField(blank=True, max_length=8)),
                ('total_report_cost', models.CharField(max_length=15)),
                ('total_report_cost_txt', models.CharField(max_length=200)),
                ('pdf_report', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/', verbose_name='Отчёт в пдф')),
                ('pdf_report_base64', models.CharField(blank=True, max_length=1000000, null=True)),
                ('pdf_report_pkcs7', models.JSONField(blank=True, null=True)),
                ('pdf_report_qr', models.JSONField(blank=True, null=True)),
                ('passport_photo', models.FileField(blank=True, null=True, upload_to='', verbose_name='Фото пасспорта')),
                ('registration_photo', models.FileField(blank=True, null=True, upload_to='', verbose_name='Фото тех.пасспорта')),
                ('wear_data', models.JSONField(blank=True, null=True)),
                ('service_data', models.JSONField(blank=True, null=True)),
                ('product_data', models.JSONField(blank=True, null=True)),
                ('consumable_data', models.JSONField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Car', to='makereport.car', verbose_name='Машина')),
                ('consumable', models.ManyToManyField(related_name='Расходники', to='makereport.Consumable', verbose_name='Расходники')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Contract', to='makereport.contract', verbose_name='Контракт')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to='makereport.myuser', verbose_name='Создан')),
                ('product', models.ManyToManyField(related_name='Детали', to='makereport.Product', verbose_name='Детали')),
                ('service', models.ManyToManyField(related_name='Услуги', to='makereport.Service', verbose_name='Услуги')),
            ],
            options={
                'verbose_name': 'Отчёт',
                'verbose_name_plural': 'Отчёты',
            },
        ),
        migrations.CreateModel(
            name='PassportPhotos',
            fields=[
                ('p_photo_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото пасспорта')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportPPhotos', to='makereport.report', verbose_name='Отчёт')),
            ],
        ),
        migrations.CreateModel(
            name='OtherPhotos',
            fields=[
                ('o_photo_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photos', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото чеков')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportOPhotos', to='makereport.report', verbose_name='Отчёт')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('image_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportImages', to='makereport.report', verbose_name='Отчёт')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Customer', to='makereport.customer', verbose_name='Клиент'),
        ),
        migrations.CreateModel(
            name='Checks',
            fields=[
                ('checks_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checks', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото чеков')),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportChecks', to='makereport.report', verbose_name='Отчёт')),
            ],
        ),
    ]
